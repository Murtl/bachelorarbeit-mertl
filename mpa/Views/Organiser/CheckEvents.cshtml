@model IEnumerable<EventModel>

@{
    ViewData["Title"] = "Check Events";
}

<link href="~/css/ownStyles.css" rel="stylesheet" />

<section class="events-section">
    <section class="searchbar-section">
        <input type="text" class="search-input" id="searchInput" placeholder="Veranstaltung suchen..." oninput="filterEvents()"/>
    </section>

    @foreach (var evt in ViewData["EventData"] as IEnumerable<EventModel> ?? Enumerable.Empty<EventModel>())
    {
        <section class="event-wrapper">
            <div class="header-section">
                <span class="event-name">@evt.Name</span>
                <div class="right-header-section">
                    <span>@evt.Date</span>
                    <span>@evt.Time</span>
                </div>
            </div>
            <div>
                <span>Teilnehmer:</span>
                <ul>
                    @foreach (var participant in evt.Participants ?? new List<string>())
                    {
                        <li>@participant</li>
                    }
                </ul>
            </div>
        </section>
    }
</section>

<script>
    // Filtert die Veranstaltungen nach dem Namen
    function filterEvents() {
        let input, filter, events, eventWrapper, eventName, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        events = document.getElementsByClassName("event-wrapper");
        for (i = 0; i < events.length; i++) {
            eventWrapper = events[i].getElementsByClassName("event-name")[0];
            eventName = eventWrapper.textContent || eventWrapper.innerText;
            if (eventName.toUpperCase().indexOf(filter) > -1) {
                events[i].style.display = "";
            } else {
                events[i].style.display = "none";
            }
        }
    }
</script>